<tool id="psi-cd-hit" name="PSI-CD-HIT" version="0.1.0">
    <requirements>
    </requirements>
    <stdio>
        <exit_code range="1:" />
    </stdio>
    <command interpreter="perl"><![CDATA[
        psi-cd-hit.pl -i "$input1" -o "$output1" -c $id
		#if ($moreoptions.options == "advanced")
			-G $moreoptions.identity
			-aL $moreoptions.alcovlong
			-aS $moreoptions.alcovshort
			-g $moreoptions.g
			-circle $moreoptions.circle
			-prog $moreoptions.prog
		#end if
		-outclstr "$outputclstr" -outout "$outputout"
    ]]></command>
    <inputs>
        <param type="data" name="input1" label="Redundant fasta file"  format="fasta" />
	<param name="id" type="float" label="Clustering threshold (sequence identity)" value="0.9" />
	<conditional name="moreoptions">
		<param name="options" type="select" label="Specify more options:">
			<option value="simple" selected="true">No, use program defaults.</option>
			<option value="advanced">Yes, see full parameter list.</option>
		</param>
		<when value="simple">
		</when>
		<when value="advanced">
			<param name="identity" type="select" label="Identity:">
				<option value="0">Local</option>
				<option value="1" selected="true">Global</option>
			</param>
			<param name="alcovlong" type="float" label="Alignement coverage for the longer sequence" value="0.0" />
                        <param name="alcovshort" type="float" label="Alignement coverage for the shorter sequence" value="0.0" />
			<param name="g" type="select" label="Cluster sequence into the most similar cluster?">
				<option value="1" selected="true">Yes (accurate but slow)</option>
				<option value="0">No, cluster to the first cluster that meet the threshold (fast)</option>
			</param>
			<param name="circle" type="select" label="Treat sequences as circular sequences?">
                                <option value="1">Yes</option>
                                <option value="0" selected="true">No</option>
                        </param>
			<param name="prog" type="select" label="Program">
				<option value="blastp">blastp</option>
                		<option value="blastn">blastn</option>
                		<option value="megablast" selected="true">megablast</option>
                		<option value="blastpgp">blastpgp</option>
			</param>
		</when>
	</conditional>
    </inputs>
    <outputs>
        <data name="output1" format="fasta" />
	<data name="outputclstr" format="txt" />
	<data name="outputout" format="txt" />
    </outputs>
    <tests>
        <test>
        	<param name="input1" value="input.fasta"/>
        	<param name="id" value="0.9"/>
		<param name="moreoptions.options" value="advanced"/>
		<param name="moreoptions.prog" value="megablast"/>
                <param name="moreoptions.identity" value="1"/>
                <param name="moreoptions.alcovlong" value="0"/>
                <param name="moreoptions.alcovshort" value="0"/>
                <param name="moreoptions.g" value="1"/>
		<param name="moreoptions.circle" value="0"/>
		<output name="output1" file="output.fasta"/>
	    	<output name="outputclstr" file="output.clstr"/>
        </test>
    </tests>
    <help><![CDATA[
**What it does**

PSI-CD-HIT clusters proteins at very low threshold, it also cluster long DNA sequences, through blastp, blastn and metablast. PSI-cd-hit is a Perl script, which runs similar incremental algorithm like CD-HIT, but using BLAST to calculate similarities. Below are the procedures of PSI-CD-HIT:

1. Sort sequences by decreasing length 

2. First one is the first representative

3. Using 1st one blast all remaining sequences, pick up its neighbors that meet the clustering threshold

4. Repeat until done

**Options** 


* Input/output:

Input a redundant fasta file to cluster.

There are three output files:

1. A fasta file of representative sequences

2. A clstr file with the list of clusters

3. A txt file


* Thresholds:

-c : clustering threshold (sequence identity), default 0.3

-G : (1/0) use global identity? default 1(global). If you prefer to use -G 0(local), it is suggested that you also use -aS, -aL, such as -aS 0.8, to prevent very short matches.

-aL : alignment coverage for the longer sequence, default 0.0. If set to 0.9, the alignment must covers 90% of the sequence

-aS : alignment coverage for the shorter sequence, default 0.0. If set to 0.9, the alignment must covers 90% of the sequence

-g : (1/0), default 0. By cd-hit's default algorithm, a sequence is clustered to the first cluster that meet the threshold (fast cluster). If set to 1, the program will cluster it into the most similar cluster that meet the threshold (accurate but slow mode), but either 1 or 0 won't change the representatives of final clusters

-circle : (1/0), default 0. When set to 1, treat sequences as circular sequence. Bacterial genomes, plasmids are circular, but their genome coordinate maybe arbitary, 
        
* Program:

-prog : (blastp, blastn, megablast, blastpgp), default blastp 

 ]]></help>
    <citations>
	<citation type="bibtex">@ARTICLE{cluster,
		author = {Weizhong Li, Lukasz Jaroszewski, Adam Godzik},
		title = {Clustering of highly homologous sequences to reduce thesize of large protein database},
		journal = {Bioinformatics},
		year = {2001},
		volume = {17},
		pages = {282-283}
	}</citation>
        <citation type="bibtex">@ARTICLE{cd-hit,
                author = {Weizhong Li, Lukasz Jaroszewski, Adam Godzik},
                title = {Cd-hit: a fast program for clustering and comparing large sets of protein or nucleotide sequences},
                journal = {Bioinformatics},
                year = {2006},
                volume = {22},
                pages = {1658-1659}
        }</citation>
    </citations>
</tool>
